# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/GNN-for-Combinatorial-Optimization',
                'doc_host': 'https://IvanIsCoding.github.io',
                'git_url': 'https://github.com/IvanIsCoding/GNN-for-Combinatorial-Optimization',
                'lib_path': 'gnn_for_co'},
  'syms': { 'gnn_for_co.core': { 'gnn_for_co.core.CombGNN': ('gnn_definition.html#combgnn', 'gnn_for_co/core.py'),
                                 'gnn_for_co.core.CombGNN.__call__': ('gnn_definition.html#combgnn.__call__', 'gnn_for_co/core.py'),
                                 'gnn_for_co.core.GraphConvLayer': ('gnn_definition.html#graphconvlayer', 'gnn_for_co/core.py'),
                                 'gnn_for_co.core.GraphConvLayer.__call__': ( 'gnn_definition.html#graphconvlayer.__call__',
                                                                              'gnn_for_co/core.py'),
                                 'gnn_for_co.core.compute_metrics': ('gnn_definition.html#compute_metrics', 'gnn_for_co/core.py'),
                                 'gnn_for_co.core.create_Q_matrix': ('gnn_definition.html#create_q_matrix', 'gnn_for_co/core.py'),
                                 'gnn_for_co.core.create_max_cut_model': ('gnn_definition.html#create_max_cut_model', 'gnn_for_co/core.py'),
                                 'gnn_for_co.core.create_mis_model': ('gnn_definition.html#create_mis_model', 'gnn_for_co/core.py'),
                                 'gnn_for_co.core.create_train_state': ('gnn_definition.html#create_train_state', 'gnn_for_co/core.py'),
                                 'gnn_for_co.core.get_classification': ('gnn_definition.html#get_classification', 'gnn_for_co/core.py'),
                                 'gnn_for_co.core.qubo_approx_cost': ('gnn_definition.html#qubo_approx_cost', 'gnn_for_co/core.py'),
                                 'gnn_for_co.core.train_step': ('gnn_definition.html#train_step', 'gnn_for_co/core.py')},
            'gnn_for_co.train': { 'gnn_for_co.train.inner_solve_with_gnn': ( 'gnn_vs_sa_for_max_cut.html#inner_solve_with_gnn',
                                                                             'gnn_for_co/train.py'),
                                  'gnn_for_co.train.solve_with_annealing': ( 'gnn_vs_sa_for_max_cut.html#solve_with_annealing',
                                                                             'gnn_for_co/train.py'),
                                  'gnn_for_co.train.solve_with_gnn': ('gnn_vs_sa_for_max_cut.html#solve_with_gnn', 'gnn_for_co/train.py')}}}
